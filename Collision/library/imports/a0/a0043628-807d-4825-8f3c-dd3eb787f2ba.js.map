{"version":3,"sources":["../../../../assets/Scripts/assets/Scripts/controlSp.js"],"names":["Emitter","require","cc","Class","extends","Component","properties","spAnim","sp","Skeleton","canMove","bullets","Prefab","onLoad","manager","director","getCollisionManager","enabled","enabledDebugDraw","instance","registerEvent","moveRight","bind","moveLeft","jump","shoot","onCollisionEnter","other","self","onCollisionStay","node","x","log","onCollisionExit","console","tween","to","scaleX","by","position","v2","start","easing","bullet","instantiate","addChild","setAnimation","addAnimation"],"mappings":"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","file":"controlSp.js","sourceRoot":"../../../../assets/Scripts","sourcesContent":["const Emitter = require('mEmitter');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n    //    isColli: false,\n       spAnim: sp.Skeleton,\n       canMove: true,\n       bullets: cc.Prefab\n    },\n\n    onLoad () {\n        let manager = cc.director.getCollisionManager();\n        manager.enabled = true;\n        manager.enabledDebugDraw = true;\n        // cc.tween(this.node).by(10, {position: cc.v2(1000, 0)}).start()\n        Emitter.instance = new Emitter();\n        Emitter.instance.registerEvent(\"RIGHT\", this.moveRight.bind(this));\n        Emitter.instance.registerEvent(\"LEFT\", this.moveLeft.bind(this));\n        Emitter.instance.registerEvent(\"JUMP\", this.jump.bind(this))\n        Emitter.instance.registerEvent('SHOOT', this.shoot.bind(this))\n        // cc.log(this.shoot())\n\n    },\n\n    onCollisionEnter: function (other, self) {\n        // this.isColli = true;\n        // if(other.tag === 0 && self.tag == 0 ) {\n            // this.spAnim.setAnimation(0, \"jump\", false);\n            // this.spAnim.addAnimation(0, \"walk\", true)\n            // this.node.y += 100;\n            // cc.tween(this.node)\n            //     .by(0.5, {position: cc.v2(50, 100)})\n            //     .by(0.5, {position: cc.v2(0, -100)})\n            //     .start()\n        //     return\n        // }else if(other.tag === 1) { \n        //     if(!this.shoot()){\n        //         this.canMove = false\n        //     }else{\n        //         other.node.destroy()\n\n            // }\n            // this.spAnim.setAnimation(0, \"shoot\", false);\n            // cc.tween(this.node)\n            // .delay(0.5)\n            // .call(()=>{\n            //     this.canMove = true\n                \n            // })\n            // .start()\n            // this.spAnim.addAnimation(0, \"walk\", true);\n            // this.shoot()\n        // }\n        // cc.log(this.spAnim.animation)\n        // console.log('on collision enter');\n        // if(other.tag === 1 && self.tag === 0 ) {\n        //     // this.canMove = false;\n        //         // other.node.destroy();\n        //         // this.canMove = true;\n        //     this.shoot()\n        //     other.node.destroy()\n        // }\n        // if(other.tag === 0 && self.tag === 3) {\n        //     self.node.destroy()\n        // }\n    },\n\n    onCollisionStay: function(other, self){\n        this.node.x -= 10\n        cc.log(\"collition stay\")\n    },\n    \n    onCollisionExit: function (other, self) {\n        console.log('on collision exit');\n        // this.spAnim.setAnimation(0, \"walk\", true)\n    },\n\n    moveRight() {\n        if(!this.canMove) return;\n        cc.tween(this.node) \n            .to(0, {scaleX: 0.1})\n            .by(0.2, {position: cc.v2(20,0)})\n            .start()\n    },\n\n    moveLeft() {\n        if(!this.canMove) return;\n        cc.tween(this.node)\n            .to(0, {scaleX: -0.1})\n            .by(0.1, {position: cc.v2(-20,0)})\n            .start()\n    },\n\n    jump() {\n        if(this.node.scaleX === 0.1){\n            cc.tween(this.node)\n                .by(0.5, {position: cc.v2(60, 100)},{easing: \"quintInOut\"})\n                .by(0.5, {position: cc.v2(40, -100)})\n                .start()\n        }else if(this.node.scaleX === -0.1) {\n            cc.tween(this.node)\n                .by(0.5, {position: cc.v2(-60, 100)},{easing: \"quintInOut\"})\n                .by(0.5, {position: cc.v2(-40, -100)})\n                .start()\n        }\n    },\n\n    shoot() {\n        let bullet = cc.instantiate(this.bullets)\n        this.node.addChild(bullet);\n        this.spAnim.setAnimation(0, \"shoot\", false)\n        cc.tween(bullet)\n            .by(10, {position: cc.v2(100000, -1)})\n            .start()\n        this.spAnim.addAnimation(0, 'walk', true)\n    },\n\n});\n"]}