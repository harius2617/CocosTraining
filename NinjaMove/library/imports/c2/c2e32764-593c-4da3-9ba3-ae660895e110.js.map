{"version":3,"sources":["../../../../assets/Script/assets/Script/mEmitter.js"],"names":["cc","Class","extends","Component","properties","start","EventEmitter","require","mEmitter","_emiter","setMaxListeners","emit","event","listener","on","once","removeListener","removeAllListeners","instance","module","exports"],"mappings":";;;;;;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfQ,KAHP;;AAqBL;;AAEA;;AAEAC,SAzBK,mBAyBG,CAEP;AA3BI;;AA6BL;AA7BJ;AA+BA,IAAMC,eAAeC,QAAQ,QAAR,CAArB;;IACMC;AAEF,wBAAc;AAAA;;AACV,aAAKC,OAAL,GAAe,IAAIH,YAAJ,EAAf;AACA,aAAKG,OAAL,CAAaC,eAAb,CAA6B,GAA7B;AACH;;;;+BACa;AAAA;;AACV,4BAAKD,OAAL,EAAaE,IAAb;AACH;;;sCACaC,OAAOC,UAAU;AAC3B,iBAAKJ,OAAL,CAAaK,EAAb,CAAgBF,KAAhB,EAAuBC,QAAvB;AACH;;;qCACYD,OAAOC,UAAU;AAC1B,iBAAKJ,OAAL,CAAaM,IAAb,CAAkBH,KAAlB,EAAyBC,QAAzB;AACH;;;oCACWD,OAAOC,UAAU;AACzB,iBAAKJ,OAAL,CAAaO,cAAb,CAA4BJ,KAA5B,EAAmCC,QAAnC;AACH;;;kCACS;AACN,iBAAKJ,OAAL,CAAaQ,kBAAb;AACA,iBAAKR,OAAL,GAAe,IAAf;AACAD,qBAASU,QAAT,GAAoB,IAApB;AACH;;;;;;AAELV,SAASU,QAAT,GAAoB,IAApB;AACAC,OAAOC,OAAP,GAAiBZ,QAAjB","file":"mEmitter.js","sourceRoot":"../../../../assets/Script","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start() {\n\n    },\n\n    // update (dt) {},\n});\nconst EventEmitter = require('events');\nclass mEmitter {\n\n    constructor() {\n        this._emiter = new EventEmitter();\n        this._emiter.setMaxListeners(100);\n    }\n    emit(...args) {\n        this._emiter.emit(...args);\n    }\n    registerEvent(event, listener) {\n        this._emiter.on(event, listener);\n    }\n    registerOnce(event, listener) {\n        this._emiter.once(event, listener);\n    }\n    removeEvent(event, listener) {\n        this._emiter.removeListener(event, listener);\n    }\n    destroy() {\n        this._emiter.removeAllListeners();\n        this._emiter = null;\n        mEmitter.instance = null;\n    }\n}\nmEmitter.instance = null;\nmodule.exports = mEmitter;"]}