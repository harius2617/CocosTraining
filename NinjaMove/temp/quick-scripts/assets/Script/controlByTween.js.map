{"version":3,"sources":["controlByTween.js"],"names":["Emitter","require","cc","Class","extends","Component","properties","moveRight","tween","node","to","scaleX","by","position","v2","start","moveLeft","jump","t","parallel","easing","rotation","reset","firstPos","onLoad","instance","registerEvent","bind","registerOnce"],"mappings":";;;;;;AAAA,IAAMA,UAAUC,QAAQ,UAAR,CAAhB;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY,EAHP;;AAMLC,aANK,uBAMO;AACRL,WAAGM,KAAH,CAAS,KAAKC,IAAd,EACKC,EADL,CACQ,CADR,EACW,EAACC,QAAQ,CAAT,EADX,EAEKC,EAFL,CAEQ,CAFR,EAEW,EAACC,UAAUX,GAAGY,EAAH,CAAM,GAAN,EAAU,CAAV,CAAX,EAFX,EAGKC,KAHL;AAIH,KAXI;AAaLC,YAbK,sBAaM;AACPd,WAAGM,KAAH,CAAS,KAAKC,IAAd,EACKC,EADL,CACQ,CADR,EACW,EAACC,QAAQ,CAAC,CAAV,EADX,EAEKC,EAFL,CAEQ,CAFR,EAEW,EAACC,UAAUX,GAAGY,EAAH,CAAM,CAAC,GAAP,EAAW,CAAX,CAAX,EAFX,EAGKC,KAHL;AAIH,KAlBI;AAoBLE,QApBK,kBAoBE;AACH,YAAIC,IAAIhB,GAAGM,KAAX;AACAU,UAAE,KAAKT,IAAP,EACKU,QADL,CAEQD,IAAIN,EAAJ,CAAO,GAAP,EAAY,EAACC,UAAUX,GAAGY,EAAH,CAAM,CAAN,EAAS,GAAT,CAAX,EAAZ,EAAsC,EAAEM,QAAQ,YAAV,EAAtC,CAFR,EAGQF,IAAIN,EAAJ,CAAO,CAAP,EAAU,EAACS,UAAU,GAAX,EAAV,CAHR,EAKKF,QALL,CAMQD,IAAIN,EAAJ,CAAO,CAAP,EAAU,EAACC,UAAUX,GAAGY,EAAH,CAAM,CAAN,EAAS,CAAC,GAAV,CAAX,EAAV,EAAqC,EAAEM,QAAQ,YAAV,EAArC,CANR,EAOQF,IAAIN,EAAJ,CAAO,CAAP,EAAU,EAACS,UAAU,GAAX,EAAV,CAPR,EASKN,KATL;AAUH,KAhCI;AAkCLO,SAlCK,mBAkCE;AACHpB,WAAGM,KAAH,CAAS,KAAKC,IAAd,EACKC,EADL,CACQ,CADR,EACW,EAACG,UAAU,KAAKU,QAAhB,EADX,EAEKR,KAFL;AAGH,KAtCI;AAwCLS,UAxCK,oBAwCI;AACLxB,gBAAQyB,QAAR,GAAmB,IAAIzB,OAAJ,EAAnB;AACA,aAAKuB,QAAL,GAAgB,KAAKd,IAAL,CAAUI,QAA1B;AACAb,gBAAQyB,QAAR,CAAiBC,aAAjB,CAA+B,OAA/B,EAAwC,KAAKnB,SAAL,CAAeoB,IAAf,CAAoB,IAApB,CAAxC;AACA3B,gBAAQyB,QAAR,CAAiBG,YAAjB,CAA8B,MAA9B,EAAsC,KAAKZ,QAAL,CAAcW,IAAd,CAAmB,IAAnB,CAAtC;AACA3B,gBAAQyB,QAAR,CAAiBC,aAAjB,CAA+B,MAA/B,EAAuC,KAAKT,IAAL,CAAUU,IAAV,CAAe,IAAf,CAAvC;AACA3B,gBAAQyB,QAAR,CAAiBG,YAAjB,CAA8B,OAA9B,EAAuC,KAAKN,KAAL,CAAWK,IAAX,CAAgB,IAAhB,CAAvC;AACH,KA/CI;AAiDLZ,SAjDK,mBAiDG,CACP;AAlDI;;AAoDL;AApDJ","file":"controlByTween.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["const Emitter = require('mEmitter');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    },\r\n\r\n    moveRight() {\r\n        cc.tween(this.node) \r\n            .to(0, {scaleX: 1})\r\n            .by(1, {position: cc.v2(100,0)})\r\n            .start()\r\n    },\r\n\r\n    moveLeft() {\r\n        cc.tween(this.node)\r\n            .to(0, {scaleX: -1})\r\n            .by(1, {position: cc.v2(-100,0)})\r\n            .start()\r\n    },\r\n\r\n    jump() {\r\n        let t = cc.tween;\r\n        t(this.node)\r\n            .parallel(\r\n                t().by(0.5, {position: cc.v2(0, 100)},{ easing: \"sinceInOut\"}),\r\n                t().by(1, {rotation: 180})\r\n            )\r\n            .parallel(\r\n                t().by(1, {position: cc.v2(0, -100)},{ easing: \"sinceInOut\"}),\r\n                t().by(1, {rotation: 180})\r\n            )\r\n            .start()\r\n    },\r\n\r\n    reset(){\r\n        cc.tween(this.node)\r\n            .to(0, {position: this.firstPos})\r\n            .start()\r\n    },\r\n\r\n    onLoad() {\r\n        Emitter.instance = new Emitter();\r\n        this.firstPos = this.node.position;\r\n        Emitter.instance.registerEvent(\"RIGHT\", this.moveRight.bind(this));\r\n        Emitter.instance.registerOnce(\"LEFT\", this.moveLeft.bind(this));\r\n        Emitter.instance.registerEvent(\"JUMP\", this.jump.bind(this));\r\n        Emitter.instance.registerOnce(\"RESET\", this.reset.bind(this));\r\n    },\r\n\r\n    start() {\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}